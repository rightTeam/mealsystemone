<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="
      http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           ">
        <!-- 读取properties文件org.springframework.beans.factory.config.PlaceholderConfigurerSupport  -->
        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">  
			<list>  
                 <value>classpath:dbconfig.properties</value>  
            </list>  
        </property>  
	</bean>
        
        
        <!-- 配置数据库 -->
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        	<property name="driverClassName" value="${jdbc.driver}"/>
        	<property name="url" value="${jdbc.url}"/>
        	<property name="username" value="${jdbc.username}"/>
        	<property name="password" value="${jdbc.password}"/>
        </bean>
        
        
        <!-- 配置会话工厂org.mybatis.spring.SqlSessionFactoryBean -->
        <!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
    </bean>
 
     <!-- 启用注解 -->
	<context:annotation-config />
	<!-- aop激活自动代理功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	
    <!-- 事务处理器 -->
    <bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManage">
    	<tx:attributes>
    		 <tx:method name="save*" propagation="REQUIRED"/> 
    		 <tx:method name="get*" read-only="true"/>
    		<tx:method name="*" propagation="REQUIRED"/> 
    		<!-- 
    		<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			           <tx:method name="*" propagation="REQUIRED"/>
			            -->
    	</tx:attributes>
    </tx:advice>
    
    <context:component-scan base-package="com.diancan">
    		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
			
    </context:component-scan>
    
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	 <aop:config>
     <aop:pointcut expression="execution(* com.diancan.service..*(..))" id="pointcut"/>
     	<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
     </aop:config>
	
		
		
</beans>